#!/usr/bin/env python
# (C) 2017 OpenEye Scientific Software Inc. All rights reserved.
#
# TERMS FOR USE OF SAMPLE CODE The software below ("Sample Code") is
# provided to current licensees or subscribers of OpenEye products or
# SaaS offerings (each a "Customer").
# Customer is hereby permitted to use, copy, and modify the Sample Code,
# subject to these terms. OpenEye claims no rights to Customer's
# modifications. Modification of Sample Code is at Customer's sole and
# exclusive risk. Sample Code may require Customer to have a then
# current license or subscription to the applicable OpenEye offering.
# THE SAMPLE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED.  OPENEYE DISCLAIMS ALL WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. In no event shall OpenEye be
# liable for any damages or liability in connection with the Sample Code
# or its use.

from __future__ import print_function
import sys
from openeye import oechem

ifs = oechem.oemolistream()
ifs.open(sys.argv[1])
mol = oechem.OEGraphMol()
oechem.OEReadMolecule(ifs, mol)

# @ <SNIPPET-OEGETCRYSTALSYMMETRY>
p = oechem.OECrystalSymmetryParams()
if oechem.OEGetCrystalSymmetry(p, mol):
    print("a= %f b= %f c= %f" % (p.GetA(), p.GetB(), p.GetC()), end=" ")
    print("alpha= %f beta= %f gamma= %f" % (p.GetAlpha(), p.GetBeta(), p.GetGamma()), end=" ")
    print("spacegroup= %d z-value= %d" % (p.GetSpaceGroup(), p.GetZValue()))
# @ </SNIPPET-OEGETCRYSTALSYMMETRY>
