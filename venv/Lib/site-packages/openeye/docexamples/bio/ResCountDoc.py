#!/usr/bin/env python
# (C) 2017 OpenEye Scientific Software Inc. All rights reserved.
#
# TERMS FOR USE OF SAMPLE CODE The software below ("Sample Code") is
# provided to current licensees or subscribers of OpenEye products or
# SaaS offerings (each a "Customer").
# Customer is hereby permitted to use, copy, and modify the Sample Code,
# subject to these terms. OpenEye claims no rights to Customer's
# modifications. Modification of Sample Code is at Customer's sole and
# exclusive risk. Sample Code may require Customer to have a then
# current license or subscription to the applicable OpenEye offering.
# THE SAMPLE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED.  OPENEYE DISCLAIMS ALL WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. In no event shall OpenEye be
# liable for any damages or liability in connection with the Sample Code
# or its use.

# @ <SNIPPET>
import sys
from openeye import oechem


def CalcResCounts(mol):
    hv = oechem.OEHierView(mol)
    chainCt = 0
    fragCt = 0
    resCt = 0
    watCt = 0
    for chain in hv.GetChains():
        chainCt += 1
        for frag in chain.GetFragments():
            fragCt += 1
            for hres in frag.GetResidues():
                resCt += 1
                if (oechem.OEGetResidueIndex(hres.GetOEResidue()) ==
                        oechem.OEResidueIndex_HOH):
                    watCt += 1
    print("Molecule : %s" % mol.GetTitle())
    print("Chains   : %d" % chainCt)
    print("Fragments: %d" % fragCt)
    print("Residues : %d (%d waters)" % (resCt, watCt))


def main(argv=[__name__]):
    if len(argv) != 2:
        oechem.OEThrow.Usage("%s <mol-infile>" % argv[0])

    ims = oechem.oemolistream()
    if not ims.open(argv[1]):
        oechem.OEThrow.Fatal("Unable to open %s for reading" % argv[1])

    for mol in ims.GetOEGraphMols():
        if not oechem.OEHasResidues(mol):
            oechem.OEPerceiveResidues(mol, oechem.OEPreserveResInfo_All)
        CalcResCounts(mol)


if __name__ == "__main__":
    sys.exit(main(sys.argv))
# @ </SNIPPET>
