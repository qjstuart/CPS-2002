#!/usr/bin/env python
# (C) 2017 OpenEye Scientific Software Inc. All rights reserved.
#
# TERMS FOR USE OF SAMPLE CODE The software below ("Sample Code") is
# provided to current licensees or subscribers of OpenEye products or
# SaaS offerings (each a "Customer").
# Customer is hereby permitted to use, copy, and modify the Sample Code,
# subject to these terms. OpenEye claims no rights to Customer's
# modifications. Modification of Sample Code is at Customer's sole and
# exclusive risk. Sample Code may require Customer to have a then
# current license or subscription to the applicable OpenEye offering.
# THE SAMPLE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED.  OPENEYE DISCLAIMS ALL WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. In no event shall OpenEye be
# liable for any damages or liability in connection with the Sample Code
# or its use.

from openeye import oechem
from openeye import oedepict

# @ <SNIPPET-IMAGE-GRID-FIXED-SCALE>
smiles = ["c1ccccc1", "c1cccc2c1ccnc2", "c1ccc2c(c1)cc3ccccc3n2"]

molecules = []
for smi in smiles:
    mol = oechem.OEGraphMol()
    oechem.OESmilesToMol(mol, smi)
    oedepict.OEPrepareDepiction(mol)
    molecules.append(oechem.OEGraphMol(mol))

image = oedepict.OEImage(400, 200)

rows, cols = 1, 3
grid = oedepict.OEImageGrid(image, rows, cols)

opts = oedepict.OE2DMolDisplayOptions(grid.GetCellWidth(), grid.GetCellHeight(),
                                      oedepict.OEScale_AutoScale)

minscale = float("inf")
for mol in molecules:
    minscale = min(minscale, oedepict.OEGetMoleculeScale(mol, opts))

opts.SetScale(minscale)
for idx, cell in enumerate(grid.GetCells()):
    disp = oedepict.OE2DMolDisplay(molecules[idx], opts)
    oedepict.OERenderMolecule(cell, disp)

oedepict.OEWriteImage("ImageGridFixedScale.png", image)
# @ </SNIPPET-IMAGE-GRID-FIXED-SCALE>
oedepict.OEWriteImage("ImageGridFixedScale.pdf", image)
