#!/usr/bin/env python
# (C) 2017 OpenEye Scientific Software Inc. All rights reserved.
#
# TERMS FOR USE OF SAMPLE CODE The software below ("Sample Code") is
# provided to current licensees or subscribers of OpenEye products or
# SaaS offerings (each a "Customer").
# Customer is hereby permitted to use, copy, and modify the Sample Code,
# subject to these terms. OpenEye claims no rights to Customer's
# modifications. Modification of Sample Code is at Customer's sole and
# exclusive risk. Sample Code may require Customer to have a then
# current license or subscription to the applicable OpenEye offering.
# THE SAMPLE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED.  OPENEYE DISCLAIMS ALL WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. In no event shall OpenEye be
# liable for any damages or liability in connection with the Sample Code
# or its use.

from openeye import oechem
from openeye import oedepict

# @ <SNIPPET-SUB-SEARCH-ALIGN>
refmol = oechem.OEGraphMol()
oechem.OESmilesToMol(refmol, "O=C(O)C(N)")
oedepict.OEPrepareDepiction(refmol)
ss = oechem.OESubSearch(refmol, oechem.OEExprOpts_DefaultAtoms, oechem.OEExprOpts_DefaultBonds)

aminosmiles = ["O=C(O)[C@@H](N)Cc1c[nH]cn1 Histidine",
               "CC(C)[C@@H](C(=O)O)N Valine",
               "C[C@H]([C@@H](C(=O)O)N)O Threonine",
               "C1C[C@H](NC1)C(=O)O Proline"]

aminoacids = []

for smi in aminosmiles:
    mol = oechem.OEGraphMol()
    oechem.OESmilesToMol(mol, smi)
    oedepict.OEPrepareDepiction(mol)
    aminoacids.append(oechem.OEGraphMol(mol))

image = oedepict.OEImage(400, 400)

rows, cols = 2, 2
grid = oedepict.OEImageGrid(image, rows, cols)

opts = oedepict.OE2DMolDisplayOptions(grid.GetCellWidth(),
                                      grid.GetCellHeight(), oedepict.OEScale_AutoScale)
opts.SetAtomStereoStyle(oedepict.OEAtomStereoStyle_Display_All)

minscale = float("inf")
for amino in aminoacids:
    minscale = min(minscale, oedepict.OEGetMoleculeScale(amino, opts))
opts.SetScale(minscale)

for amino, cell in zip(aminoacids, grid.GetCells()):
    alignres = oedepict.OEPrepareAlignedDepiction(amino, ss)
    disp = oedepict.OE2DMolDisplay(amino, opts)
    if alignres.IsValid():
        oedepict.OEAddHighlighting(disp, oechem.OELightGreen,
                                   oedepict.OEHighlightStyle_Stick, alignres)
    oedepict.OERenderMolecule(cell, disp)

oedepict.OEWriteImage("SubSearchAlign.png", image)
# @ </SNIPPET-SUB-SEARCH-ALIGN>
oedepict.OEWriteImage("SubSearchAlign.pdf", image)
