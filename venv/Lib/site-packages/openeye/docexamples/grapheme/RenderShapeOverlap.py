#!/usr/bin/env python
# (C) 2017 OpenEye Scientific Software Inc. All rights reserved.
#
# TERMS FOR USE OF SAMPLE CODE The software below ("Sample Code") is
# provided to current licensees or subscribers of OpenEye products or
# SaaS offerings (each a "Customer").
# Customer is hereby permitted to use, copy, and modify the Sample Code,
# subject to these terms. OpenEye claims no rights to Customer's
# modifications. Modification of Sample Code is at Customer's sole and
# exclusive risk. Sample Code may require Customer to have a then
# current license or subscription to the applicable OpenEye offering.
# THE SAMPLE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED.  OPENEYE DISCLAIMS ALL WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. In no event shall OpenEye be
# liable for any damages or liability in connection with the Sample Code
# or its use.

import sys
from openeye import oechem
from openeye import oedepict
from openeye import oegrapheme
from openeye import oeshape

###############################################################
# USED TO GENERATE CODE SNIPPETS FOR THE GRAPHEME DOCUMENTATION
###############################################################

if len(sys.argv) != 3:
    oechem.OEThrow.Usage("%s <refmol file> <fitmmol file>" % sys.argv[0])

refifs = oechem.oemolistream(sys.argv[1])
refmol = oechem.OEGraphMol()
oechem.OEReadMolecule(refifs, refmol)

fitifs = oechem.oemolistream(sys.argv[2])
fitmol = oechem.OEGraphMol()
oechem.OEReadMolecule(fitifs, fitmol)

# @ <SNIPPET-RENDER-SHAPE-OVERLAP>
cff = oeshape.OEColorForceField()
cff.Init(oeshape.OEColorFFType_ImplicitMillsDean)
qdisp = oegrapheme.OEShapeQueryDisplay(refmol, cff)

opts = oegrapheme.OEShapeOverlapDisplayOptions()
opts.SetTitleLocation(oedepict.OETitleLocation_Hidden)
arcpen = oedepict.OEPen(oechem.OEGrey, oechem.OEGrey, oedepict.OEFill_Off,
                        2.0, oedepict.OEStipple_ShortDash)
opts.SetQuerySurfaceArcFxn(oegrapheme.OEDefaultArcFxn(arcpen))
odisp = oegrapheme.OEShapeOverlapDisplay(qdisp, fitmol, opts)

image = oedepict.OEImage(420.0, 280.0)
oegrapheme.OERenderShapeOverlap(image, odisp)
# @ </SNIPPET-RENDER-SHAPE-OVERLAP>
oedepict.OEWriteImage("RenderShapeOverlap.png", image)
oedepict.OEWriteImage("RenderShapeOverlap.pdf", image)
