#!/usr/bin/env python
# (C) 2017 OpenEye Scientific Software Inc. All rights reserved.
#
# TERMS FOR USE OF SAMPLE CODE The software below ("Sample Code") is
# provided to current licensees or subscribers of OpenEye products or
# SaaS offerings (each a "Customer").
# Customer is hereby permitted to use, copy, and modify the Sample Code,
# subject to these terms. OpenEye claims no rights to Customer's
# modifications. Modification of Sample Code is at Customer's sole and
# exclusive risk. Sample Code may require Customer to have a then
# current license or subscription to the applicable OpenEye offering.
# THE SAMPLE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED.  OPENEYE DISCLAIMS ALL WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. In no event shall OpenEye be
# liable for any damages or liability in connection with the Sample Code
# or its use.

import sys
from openeye import oechem
from openeye import oegraphsim

# @ <SNIPPET-SDF2FP>
if len(sys.argv) != 2:
    oechem.OEThrow.Usage("%s <infile>" % sys.argv[0])

ifs = oechem.oemolistream()
if not ifs.open(sys.argv[1]):
    oechem.OEThrow.Fatal("Unable to open %s for reading" % sys.argv[1])
if ifs.GetFormat() != oechem.OEFormat_SDF:
    oechem.OEThrow.Fatal("%s input file has to be an SDF file" % sys.argv[1])

molcounter = 0
fpcounter = 0
for mol in ifs.GetOEGraphMols():
    molcounter += 1
    for dp in oechem.OEGetSDDataPairs(mol):
        if oegraphsim.OEIsValidFPTypeString(dp.GetTag()):
            fpcounter += 1
            fptypestr = dp.GetTag()
            fphexdata = dp.GetValue()

            fp = oegraphsim.OEFingerPrint()
            fptype = oegraphsim.OEGetFPType(fptypestr)
            fp.SetFPTypeBase(fptype)
            fp.FromHexString(fphexdata)

print("Number of molecules = %d" % molcounter)
print("Number of fingerprints = %d" % fpcounter)
# @ </SNIPPET-SDF2FP>
