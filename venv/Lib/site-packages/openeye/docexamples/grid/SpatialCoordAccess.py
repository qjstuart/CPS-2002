#!/usr/bin/env python
# (C) 2017 OpenEye Scientific Software Inc. All rights reserved.
#
# TERMS FOR USE OF SAMPLE CODE The software below ("Sample Code") is
# provided to current licensees or subscribers of OpenEye products or
# SaaS offerings (each a "Customer").
# Customer is hereby permitted to use, copy, and modify the Sample Code,
# subject to these terms. OpenEye claims no rights to Customer's
# modifications. Modification of Sample Code is at Customer's sole and
# exclusive risk. Sample Code may require Customer to have a then
# current license or subscription to the applicable OpenEye offering.
# THE SAMPLE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED.  OPENEYE DISCLAIMS ALL WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. In no event shall OpenEye be
# liable for any damages or liability in connection with the Sample Code
# or its use.

# @ <SNIPPET>
from __future__ import print_function
import sys
from openeye import oechem
from openeye import oegrid

ifs = oechem.oemolistream(sys.argv[1])
mol = oechem.OEGraphMol()
oechem.OEReadMolecule(ifs, mol)

grid = oegrid.OEScalarGrid()
oegrid.OEMakeMolecularGaussianGrid(grid, mol, 0.5)

# @ <SNIPPET-SpatialGet>
for atom in mol.GetAtoms():
    x, y, z = mol.GetCoords(atom)
    if grid.IsInGrid(x, y, z):
        print("value = %.5f" % grid.GetValue(x, y, z))
# @ </SNIPPET-SpatialGet>

# @ <SNIPPET-SpatialSet>
for atom in mol.GetAtoms():
    x, y, z = mol.GetCoords(atom)
    if grid.IsInGrid(x, y, z):
        grid.SetValue(x, y, z, atom.GetPartialCharge())
# @ </SNIPPET-SpatialSet>
# @ </SNIPPET>
