#!/usr/bin/env python
# (C) 2017 OpenEye Scientific Software Inc. All rights reserved.
#
# TERMS FOR USE OF SAMPLE CODE The software below ("Sample Code") is
# provided to current licensees or subscribers of OpenEye products or
# SaaS offerings (each a "Customer").
# Customer is hereby permitted to use, copy, and modify the Sample Code,
# subject to these terms. OpenEye claims no rights to Customer's
# modifications. Modification of Sample Code is at Customer's sole and
# exclusive risk. Sample Code may require Customer to have a then
# current license or subscription to the applicable OpenEye offering.
# THE SAMPLE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED.  OPENEYE DISCLAIMS ALL WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. In no event shall OpenEye be
# liable for any damages or liability in connection with the Sample Code
# or its use.

# @ <SNIPPET>
from openeye import oechem
import sys

if len(sys.argv) != 5:
    oechem.OEThrow.Usage("%s <input> <output> <offset> <limit>" % sys.argv[0])

moldb = oechem.OEMolDatabase()
if not moldb.Open(sys.argv[1]):
    oechem.OEThrow.Fatal("Unable to open %s" % sys.argv[1])

if moldb.GetFormat() != oechem.OEGetFileType(oechem.OEGetFileExtension(sys.argv[2])):
    oechem.OEThrow.Fatal("Output format does not match input format: %s != %s" %
                         (oechem.OEGetFileExtension(sys.argv[1]),
                          oechem.OEGetFileExtension(sys.argv[2])))

ofs = oechem.oemolostream()
if not ofs.open(sys.argv[2]):
    oechem.OEThrow.Fatal("Unable to open %s for writing" % sys.argv[2])

offset = int(sys.argv[3])
limit = int(sys.argv[4])

maxIdx = offset + limit

for idx in range(offset, maxIdx):
    moldb.WriteMolecule(ofs, idx)
# @ </SNIPPET>
