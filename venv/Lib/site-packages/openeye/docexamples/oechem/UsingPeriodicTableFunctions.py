#!/usr/bin/env python
# (C) 2017 OpenEye Scientific Software Inc. All rights reserved.
#
# TERMS FOR USE OF SAMPLE CODE The software below ("Sample Code") is
# provided to current licensees or subscribers of OpenEye products or
# SaaS offerings (each a "Customer").
# Customer is hereby permitted to use, copy, and modify the Sample Code,
# subject to these terms. OpenEye claims no rights to Customer's
# modifications. Modification of Sample Code is at Customer's sole and
# exclusive risk. Sample Code may require Customer to have a then
# current license or subscription to the applicable OpenEye offering.
# THE SAMPLE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED.  OPENEYE DISCLAIMS ALL WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. In no event shall OpenEye be
# liable for any damages or liability in connection with the Sample Code
# or its use.

# @ <SNIPPET>
from __future__ import print_function
from openeye import oechem

# @ <SNIPPET-ATOMIC2SYMBOL>
symbol = oechem.OEGetAtomicSymbol(oechem.OEElemNo_C)
print("The atomic symbol for carbon is", symbol)
# @ </SNIPPET-ATOMIC2SYMBOL>
# @ <SNIPPET-SYMBOL2ATOMIC>
print("The atomic number for 'Cl' is", oechem.OEGetAtomicNum("Cl"))
# @ </SNIPPET-SYMBOL2ATOMIC>

mol = oechem.OEGraphMol()
oechem.OESmilesToMol(mol, "c1ccncc1CF")
oechem.OEAssignAromaticFlags(mol)

# @ <SNIPPET-SET-RADII>
oechem.OEAssignPaulingVdWRadii(mol)
for atom in mol.GetAtoms():
    print(atom.GetIdx(), atom.GetRadius())
# @ </SNIPPET-SET-RADII>

# @ <SNIPPET-PERIODIC-MONOISO-WEIGHT>
elemno = oechem.OEElemNo_O
weight = oechem.OEGetIsotopicWeight(elemno, oechem.OEGetDefaultMass(elemno))
# @ </SNIPPET-PERIODIC-MONOISO-WEIGHT>
print(oechem.OEGetAtomicSymbol(elemno), weight)
# @ </SNIPPET>
