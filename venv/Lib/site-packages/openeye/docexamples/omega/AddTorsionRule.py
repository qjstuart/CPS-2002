#!/usr/bin/env python
# (C) 2017 OpenEye Scientific Software Inc. All rights reserved.
#
# TERMS FOR USE OF SAMPLE CODE The software below ("Sample Code") is
# provided to current licensees or subscribers of OpenEye products or
# SaaS offerings (each a "Customer").
# Customer is hereby permitted to use, copy, and modify the Sample Code,
# subject to these terms. OpenEye claims no rights to Customer's
# modifications. Modification of Sample Code is at Customer's sole and
# exclusive risk. Sample Code may require Customer to have a then
# current license or subscription to the applicable OpenEye offering.
# THE SAMPLE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED.  OPENEYE DISCLAIMS ALL WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. In no event shall OpenEye be
# liable for any damages or liability in connection with the Sample Code
# or its use.

import sys
from openeye import oechem
from openeye import oeomega

if len(sys.argv) != 2:
    oechem.OEThrow.Usage("%s <outfile>" % sys.argv[0])

mol = oechem.OEMol()
oechem.OESmilesToMol(mol, "O=COC")

ofs = oechem.oemolostream()
if not ofs.open(sys.argv[1]):
    oechem.OEThrow.Fatal("Unable to open %s for writing" % sys.argv[1])

omegaOpts = oeomega.OEOmegaOptions()
omega = oeomega.OEOmega(omegaOpts)
torlib = oeomega.OETorLib()

# @ <SNIPPET-AddTorsionRule-string>
# Adding the torsion rule "[O:1]=[C:2]-[O:3][CH3:4] 90" as a string
# This takes precedent over previous rule
rule = "[O:1]=[C:2]-[O:3][CH3:4] 90"
if not torlib.AddTorsionRule(rule):
    oechem.OEThrow.Fatal("Failed to add torsion rule: %s" % rule)

omegaOpts.SetTorLib(torlib)
omega.SetOptions(omegaOpts)
if omega(mol):
    oechem.OEWriteMolecule(ofs, mol)
# @ </SNIPPET-AddTorsionRule-string>

# @ <SNIPPET-AddTorsionRule-OEQMol>
# Adding torsion rule "[O:1]=[C:2]-[O:3][CH3:4] 45" as a query
# molecule. This takes precedent over default rule
qmol = oechem.OEQMol()
oechem.OEParseSmarts(qmol, "[O:1]=[C:2]-[O:3][CH3:4]")
degrees = oechem.OEIntVector([45])

if not torlib.AddTorsionRule(qmol, degrees):
    oechem.OEThrow.Fatal("Failed to add torsion rule")

omegaOpts.SetTorLib(torlib)
omega.SetOptions(omegaOpts)
if omega(mol):
    oechem.OEWriteMolecule(ofs, mol)
# @ </SNIPPET-AddTorsionRule-OEQMol>
