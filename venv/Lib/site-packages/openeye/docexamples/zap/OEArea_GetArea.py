#!/usr/bin/env python
# (C) 2017 OpenEye Scientific Software Inc. All rights reserved.
#
# TERMS FOR USE OF SAMPLE CODE The software below ("Sample Code") is
# provided to current licensees or subscribers of OpenEye products or
# SaaS offerings (each a "Customer").
# Customer is hereby permitted to use, copy, and modify the Sample Code,
# subject to these terms. OpenEye claims no rights to Customer's
# modifications. Modification of Sample Code is at Customer's sole and
# exclusive risk. Sample Code may require Customer to have a then
# current license or subscription to the applicable OpenEye offering.
# THE SAMPLE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED.  OPENEYE DISCLAIMS ALL WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. In no event shall OpenEye be
# liable for any damages or liability in connection with the Sample Code
# or its use.

from __future__ import print_function
import sys
from openeye import oechem
from openeye import oezap

if len(sys.argv) != 2:
    oechem.OEThrow.Usage("%s <molfile>" % sys.argv[0])

mol = oechem.OEGraphMol()
ifs = oechem.oemolistream()
if not ifs.open(sys.argv[1]):
    oechem.OEThrow.Fatal("Unable to open %s for reading", sys.argv[1])

if not oechem.OEIs3DFormat(ifs.GetFormat()):
    oechem.OEThrow.Fatal("Invalid input format: need 3D coordinates")

oechem.OEReadMolecule(ifs, mol)
oechem.OEAssignBondiVdWRadii(mol)
oechem.OEMMFFAtomTypes(mol)
oechem.OEMMFF94PartialCharges(mol)

# @ <SNIPPET-GetArea-Molecule>
area = oezap.OEArea()
a = area.GetArea(mol)
print("Molecule area =", a)
# @ </SNIPPET-GetArea-Molecule>

# @ <SNIPPET-GetArea-Atoms>
atomArea = oechem.OEFloatArray(mol.GetMaxAtomIdx())
area = oezap.OEArea()
area.GetArea(mol, atomArea)

for atom in mol.GetAtoms():
    idx = atom.GetIdx()
    print(idx, atomArea[idx])
# @ </SNIPPET-GetArea-Atoms>
