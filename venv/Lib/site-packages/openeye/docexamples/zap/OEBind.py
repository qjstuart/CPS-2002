#!/usr/bin/env python
# (C) 2017 OpenEye Scientific Software Inc. All rights reserved.
#
# TERMS FOR USE OF SAMPLE CODE The software below ("Sample Code") is
# provided to current licensees or subscribers of OpenEye products or
# SaaS offerings (each a "Customer").
# Customer is hereby permitted to use, copy, and modify the Sample Code,
# subject to these terms. OpenEye claims no rights to Customer's
# modifications. Modification of Sample Code is at Customer's sole and
# exclusive risk. Sample Code may require Customer to have a then
# current license or subscription to the applicable OpenEye offering.
# THE SAMPLE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED.  OPENEYE DISCLAIMS ALL WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. In no event shall OpenEye be
# liable for any damages or liability in connection with the Sample Code
# or its use.

from __future__ import print_function
import sys
from openeye import oechem
from openeye import oezap


def ReadMolecule(filename):
    mol = oechem.OEGraphMol()
    ifs = oechem.oemolistream()
    if not ifs.open(filename):
        oechem.OEThrow.Fatal("Unable to open %s for reading", filename)

    if not oechem.OEIs3DFormat(ifs.GetFormat()):
        oechem.OEThrow.Fatal("Invalid input format: need 3D coordinates")

    if not oechem.OEReadMolecule(ifs, mol):
        oechem.OEThrow.Fatal("Unable to read a molecule from %s", filename)

    return mol


if len(sys.argv) != 3:
    oechem.OEThrow.Usage("%s <protein> <ligand>" % sys.argv[0])

protein = ReadMolecule(sys.argv[1])
ligand = ReadMolecule(sys.argv[2])

# @ <SNIPPET-OEBind>
bind = oezap.OEBind()
bind.SetProtein(protein)

results = oezap.OEBindResults()
bind.Bind(ligand, results)

results.Print(oechem.OEThrow)
# @ </SNIPPET-OEBind>

# @ <SNIPPET-OEBind-SetGridSpacing>
bind = oezap.OEBind()
bind.GetZap().SetGridSpacing(0.6)
# @ </SNIPPET-OEBind-SetGridSpacing>
